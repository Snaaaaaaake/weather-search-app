{"version":3,"sources":["reducers/cityReducer.js","reducers/cityWeeklyWeatherReducer.js","reducers/cacheReducer.js","store.js","actions/actions.js","components/ServiceContext/ServiceContext.js","components/Spinner/Spinner.js","components/ErrorComponent/ErrorComponent.js","utils/getWeatherIcon.js","utils/toCelsius.js","components/SearchForm/SearchForm.js","utils/dateFormatter.js","components/CityCard/CityCard.js","utils/toMRS.js","components/ErrorBoundary/ErrorBoundary.js","components/App/App.js","api/WeatherService.js","index.js","constants/apiKey.js"],"names":["initialState","city","isLoading","error","cityWeeklyWeather","cache","cacheLength","store","createStore","combineReducers","cityState","state","action","type","payload","cityWeeklyWeatherState","cacheState","applyMiddleware","thunk","getCachedData","request","getState","Array","isArray","join","setCacheThunkAction","data","dispatch","length","slice","setCacheAction","fetchCitySuccessAction","fetchWeeklyWeatherRequestAction","fetchWeeklyWeatherSuccessAction","ServiceContext","React","createContext","Spinner","Box","py","width","align","CircularProgress","ErrorComponent","props","Typography","variant","component","message","getWeatherIcon","id","toCelsius","kelvin","Math","round","useStyles","makeStyles","form","margin","display","maxWidth","input","flexGrow","marginRight","buttonContainer","justifyContent","button","mapDispatchToProps","fetchCityThunkAction","service","cachedData","getCity","then","catch","connect","weatherService","useContext","classes","useState","formState","setFormState","openModalHandler","className","onSubmit","event","preventDefault","toLowerCase","autoComplete","TextField","onChange","target","value","label","required","disabled","inputProps","pattern","Button","color","onClick","src","weather","icon","alt","name","main","temp","addZero","date","dateFormatter","rawDate","getDate","getMonth","getFullYear","fetchWeeklyWeatherThunkAction","coord","lat","lon","getWeeklyWeather","daily","connectWithStore","onCloseHandler","Date","dt","hours","getHours","useEffect","hPa","WeeklyWeatherBlock","mt","gridTemplateColumns","map","day","index","mr","night","description","toUpperCase","substring","Container","disableGutters","Card","mx","CardMedia","image","CardContent","gutterBottom","feels_like","wind","speed","pressure","CardActions","size","ErrorBoundary","hasError","this","children","Component","rootContainer","marginTop","padding","titleContainer","modal","alignItems","overflowY","App","modalState","setModalState","Modal","open","onClose","disableAutoFocus","disableEnforceFocus","resCheck","res","ok","Error","json","adress","url","apiKey","lang","fetch","status","process","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.afe8e6ba.chunk.js","sourcesContent":["const initialState = {\r\n  city: null,\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nexport default function cityReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"FETCH_CITY_REQUEST\":\r\n      return {\r\n        city: null,\r\n        isLoading: true,\r\n        error: null,\r\n      };\r\n    case \"FETCH_CITY_SUCCESS\":\r\n      return {\r\n        city: action.payload,\r\n        isLoading: false,\r\n        error: null,\r\n      };\r\n    case \"FETCH_CITY_FAILURE\":\r\n      return {\r\n        city: null,\r\n        isLoading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  cityWeeklyWeather: null,\r\n  isLoading: true,\r\n  error: null,\r\n};\r\n\r\nexport default function cityWeeklyWeatherReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"FETCH_WEEKLY_WEATHER_REQUEST\":\r\n      return {\r\n        cityWeeklyWeather: null,\r\n        isLoading: true,\r\n        error: null,\r\n      };\r\n    case \"FETCH_WEEKLY_WEATHER_SUCCESS\":\r\n      return {\r\n        cityWeeklyWeather: action.payload,\r\n        isLoading: false,\r\n        error: null,\r\n      };\r\n    case \"FETCH_WEEKLY_WEATHER_FAILURE\":\r\n      return {\r\n        cityWeeklyWeather: null,\r\n        isLoading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  cache: {},\r\n  cacheLength: [],\r\n};\r\n\r\nexport default function cacheReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"SET_CACHE\":\r\n      return {\r\n        cache: action.payload.cache,\r\n        cacheLength: action.payload.cacheLength,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport cityReducer from \"./reducers/cityReducer\";\r\nimport cityWeeklyWeatherReducer from \"./reducers/cityWeeklyWeatherReducer\";\r\nimport cacheReducer from \"./reducers/cacheReducer\";\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    cityState: cityReducer,\r\n    cityWeeklyWeatherState: cityWeeklyWeatherReducer,\r\n    cacheState: cacheReducer,\r\n  }),\r\n  applyMiddleware(thunk)\r\n);\r\n\r\nexport default store;\r\n","const setCacheAction = (data) => {\r\n  return {\r\n    type: \"SET_CACHE\",\r\n    payload: data,\r\n  };\r\n};\r\nfunction getCachedData(request, getState) {\r\n  const cache = getState().cacheState.cache;\r\n  request = Array.isArray(request) ? request.join() : request;\r\n  return cache[request] ? cache[request] : null;\r\n}\r\nconst setCacheThunkAction = (request, data) => (dispatch, getState) => {\r\n  let { cache, cacheLength } = getState().cacheState;\r\n  request = Array.isArray(request) ? request.join() : request;\r\n  cache[request] = data;\r\n  if (cacheLength.length < 10) {\r\n    cacheLength = [...cacheLength, request];\r\n  } else {\r\n    delete cache[cacheLength[0]];\r\n    cacheLength = [...cacheLength.slice(1), request];\r\n  }\r\n  dispatch(setCacheAction({ cache, cacheLength }));\r\n};\r\n\r\nconst fetchCityRequestAction = () => {\r\n  return {\r\n    type: \"FETCH_CITY_REQUEST\",\r\n  };\r\n};\r\nconst fetchCitySuccessAction = (data) => {\r\n  return {\r\n    type: \"FETCH_CITY_SUCCESS\",\r\n    payload: data,\r\n  };\r\n};\r\nconst fetchCityFailureAction = (data) => {\r\n  return {\r\n    type: \"FETCH_CITY_FAILURE\",\r\n    payload: data,\r\n  };\r\n};\r\nconst fetchCityThunkAction = (service, id) => (dispatch, getState) => {\r\n  const cachedData = getCachedData(id, getState);\r\n  if (cachedData) {\r\n    dispatch(fetchCitySuccessAction(cachedData));\r\n  } else {\r\n    dispatch(fetchCityRequestAction());\r\n    service\r\n      .getCity(id)\r\n      .then((data) => {\r\n        dispatch(fetchCitySuccessAction(data));\r\n        dispatch(setCacheThunkAction(id, data));\r\n      })\r\n      .catch((error) => dispatch(fetchCityFailureAction(error)));\r\n  }\r\n};\r\n\r\nconst fetchWeeklyWeatherRequestAction = () => {\r\n  return {\r\n    type: \"FETCH_WEEKLY_WEATHER_REQUEST\",\r\n  };\r\n};\r\nconst fetchWeeklyWeatherSuccessAction = (data) => {\r\n  return {\r\n    type: \"FETCH_WEEKLY_WEATHER_SUCCESS\",\r\n    payload: data,\r\n  };\r\n};\r\nconst fetchWeeklyWeatherFailureAction = (data) => {\r\n  return {\r\n    type: \"FETCH_WEEKLY_WEATHER_FAILURE\",\r\n    payload: data,\r\n  };\r\n};\r\nconst fetchWeeklyWeatherThunkAction = (service) => (dispatch, getState) => {\r\n  const { lat, lon } = getState().cityState.city.coord;\r\n  const cachedData = getCachedData([lat, lon], getState);\r\n  if (cachedData) {\r\n    dispatch(fetchWeeklyWeatherSuccessAction(cachedData));\r\n  } else {\r\n    dispatch(fetchWeeklyWeatherRequestAction());\r\n    service\r\n      .getWeeklyWeather(lat, lon)\r\n      .then((data) => {\r\n        dispatch(fetchWeeklyWeatherSuccessAction(data.daily));\r\n        dispatch(setCacheThunkAction([lat, lon], data.daily));\r\n      })\r\n      .catch((error) => dispatch(fetchWeeklyWeatherFailureAction(error)));\r\n  }\r\n};\r\n\r\nexport { fetchCityThunkAction, fetchWeeklyWeatherThunkAction, fetchWeeklyWeatherRequestAction };\r\n","import React from \"react\";\r\n\r\nconst ServiceContext = React.createContext();\r\n\r\nexport default ServiceContext;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst Spinner = () => (\r\n  <Box py={5} width=\"300px\" align=\"center\">\r\n    <CircularProgress />\r\n  </Box>\r\n);\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nconst ErrorComponent = (props) => {\r\n  return (\r\n    <Box align=\"center\">\r\n      <Typography variant=\"h6\" component=\"h6\">{`${props.error.message}`}</Typography>\r\n    </Box>\r\n  );\r\n};\r\nexport default ErrorComponent;\r\n","export default function getWeatherIcon(id) {\r\n  return `https://openweathermap.org/img/wn/${id}@2x.png`;\r\n}\r\n","export default function toCelsius(kelvin) {\r\n  return Math.round(+kelvin - 273.15);\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Typography, Box, TextField, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { fetchCityThunkAction } from \"../../actions/actions\";\r\nimport ServiceContext from \"../ServiceContext/ServiceContext\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport ErrorComponent from \"../ErrorComponent/ErrorComponent\";\r\nimport getWeatherIcon from \"../../utils/getWeatherIcon\";\r\nimport toCelsius from \"../../utils/toCelsius\";\r\n\r\nconst SearchForm = (props) => {\r\n  const weatherService = useContext(ServiceContext);\r\n  const classes = useStyles();\r\n  const [formState, setFormState] = useState(\"\");\r\n  const {\r\n    fetchCityThunkAction,\r\n    openModalHandler,\r\n    cityState: { city, isLoading, error },\r\n  } = props;\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    fetchCityThunkAction(weatherService, formState.toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={classes.form} onSubmit={onSubmitHandler} autoComplete=\"off\">\r\n        <TextField\r\n          className={classes.input}\r\n          id=\"outlined-basic\"\r\n          onChange={(event) => setFormState(event.target.value)}\r\n          label=\"Введите город\"\r\n          value={formState}\r\n          variant=\"outlined\"\r\n          required\r\n          disabled={isLoading}\r\n          inputProps={{ pattern: \"^[а-яА-ЯеЁa-zA-Z\\\\s\\\\-]+$\" }}\r\n        />\r\n        <Button disabled={isLoading} variant=\"contained\" type=\"submit\" color=\"primary\">\r\n          Найти\r\n        </Button>\r\n      </form>\r\n      {isLoading ? (\r\n        <Spinner />\r\n      ) : error ? (\r\n        <ErrorComponent error={error} />\r\n      ) : !city ? null : (\r\n        <Box className={classes.buttonContainer}>\r\n          <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={openModalHandler}>\r\n            <img src={getWeatherIcon(city.weather[0].icon)} alt={city.name} />\r\n            <Box>\r\n              <Typography variant=\"body1\" component=\"h2\">\r\n                {city.name}\r\n              </Typography>\r\n              <Typography variant=\"caption\" component=\"p\">\r\n                {`${toCelsius(city.main.temp)}°C`}\r\n              </Typography>\r\n            </Box>\r\n          </Button>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  form: {\r\n    margin: \"40px 0\",\r\n    display: \"flex\",\r\n    maxWidth: 400,\r\n  },\r\n  input: {\r\n    flexGrow: 1,\r\n    marginRight: 10,\r\n  },\r\n  buttonContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  button: {\r\n    display: \"flex\",\r\n  },\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  cityState: state.cityState,\r\n});\r\nconst mapDispatchToProps = {\r\n  fetchCityThunkAction,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForm);\r\n","function addZero(date) {\r\n  return date < 10 ? `0${date}` : date;\r\n}\r\n\r\nexport default function dateFormatter(rawDate) {\r\n  return `${addZero(rawDate.getDate())}.${addZero(rawDate.getMonth() + 1)}.${rawDate.getFullYear()}`;\r\n}\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { connect as connectWithStore } from \"react-redux\";\r\nimport {\r\n  Typography,\r\n  Button,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  Card,\r\n  Box,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport ServiceContext from \"../ServiceContext/ServiceContext\";\r\nimport ErrorComponent from \"../ErrorComponent/ErrorComponent\";\r\nimport { fetchWeeklyWeatherThunkAction, fetchWeeklyWeatherRequestAction } from \"../../actions/actions\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport getWeatherIcon from \"../../utils/getWeatherIcon\";\r\nimport toCelsius from \"../../utils/toCelsius\";\r\nimport toMRS from \"../../utils/toMRS\";\r\nimport dateFormatter from \"../../utils/dateFormatter\";\r\n\r\nconst CityCard = (props) => {\r\n  const weatherService = useContext(ServiceContext);\r\n  const {\r\n    onCloseHandler,\r\n    fetchWeeklyWeatherThunkAction,\r\n    fetchWeeklyWeatherRequestAction,\r\n    cityState: { city },\r\n    cityWeeklyWeatherState: { cityWeeklyWeather, isLoading, error },\r\n  } = props;\r\n\r\n  const rawDate = new Date(city.dt * 1000);\r\n  const date = dateFormatter(rawDate);\r\n  const hours = rawDate.getHours();\r\n\r\n  useEffect(() => {\r\n    fetchWeeklyWeatherThunkAction(weatherService);\r\n    return () => fetchWeeklyWeatherRequestAction();\r\n  }, [fetchWeeklyWeatherRequestAction, fetchWeeklyWeatherThunkAction, weatherService]);\r\n\r\n  const WeeklyWeatherBlock = () => {\r\n    return (\r\n      <Box mt=\"15px\">\r\n        <Typography variant=\"body1\" component=\"p\">\r\n          В ближайшие дни:\r\n        </Typography>\r\n        <Box display=\"grid\" gridTemplateColumns=\"auto auto\">\r\n          {isLoading ? (\r\n            <Spinner />\r\n          ) : error ? (\r\n            <ErrorComponent error={error} />\r\n          ) : (\r\n            cityWeeklyWeather.map((day, index) => {\r\n              const rawDate = new Date(day.dt * 1000);\r\n              const date = dateFormatter(rawDate);\r\n              return (\r\n                index !== 0 && (\r\n                  <Box key={`day_${index}`} mr=\"10px\" mt=\"13px\">\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {date}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {`Днём: ${toCelsius(day.temp.day)}°C`}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {`Ночью: ${toCelsius(day.temp.night)}°C`}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {day.weather[0].description[0].toUpperCase() + day.weather[0].description.substring(1)}\r\n                    </Typography>\r\n                  </Box>\r\n                )\r\n              );\r\n            })\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\" disableGutters>\r\n      <Card>\r\n        <Box width=\"100px\" mx=\"auto\">\r\n          <CardMedia component=\"img\" image={getWeatherIcon(city.weather[0].icon)} />\r\n        </Box>\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Сегодня, {date}:\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"h4\" component=\"h2\">\r\n            {city.name}\r\n          </Typography>\r\n          <Typography variant=\"body1\" component=\"p\">\r\n            {toCelsius(city.main.temp)}°C\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Ощущается как {toCelsius(city.main.feels_like)}°C\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {city.weather[0].description[0].toUpperCase() + city.weather[0].description.substring(1)}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Ветер {city.wind.speed} м/с\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Давление {toMRS(city.main.pressure)} мрс\r\n          </Typography>\r\n          {cityWeeklyWeather && hours > 6 && (\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              Температура ночью: {toCelsius(cityWeeklyWeather[0].temp.night)}°C\r\n            </Typography>\r\n          )}\r\n          <WeeklyWeatherBlock />\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button onClick={onCloseHandler} size=\"small\" color=\"primary\">\r\n            Закрыть\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cityState: state.cityState,\r\n    cityWeeklyWeatherState: state.cityWeeklyWeatherState,\r\n  };\r\n};\r\nconst mapDispatchToProps = { fetchWeeklyWeatherThunkAction, fetchWeeklyWeatherRequestAction };\r\n\r\nexport default connectWithStore(mapStateToProps, mapDispatchToProps)(CityCard);\r\n","export default function toMRS(hPa) {\r\n  return Math.round(+hPa / 1.33);\r\n}\r\n","import React from \"react\";\r\nimport ErrorComponent from \"../ErrorComponent/ErrorComponent\";\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n  state = { hasError: false };\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: error };\r\n  }\r\n\r\n  render() {\r\n    return this.state.hasError ? <ErrorComponent error={this.state.hasError} /> : this.props.children;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Typography, Container, Box, Modal } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SearchForm from \"../SearchForm/SearchForm\";\r\nimport CityCard from \"../CityCard/CityCard\";\r\nimport ErrorBoundary from \"../ErrorBoundary/ErrorBoundary\";\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  const [modalState, setModalState] = useState(false);\r\n  return (\r\n    <Container className={classes.rootContainer} maxWidth=\"xs\">\r\n      <Box className={classes.titleContainer}>\r\n        <Typography align=\"center\" variant=\"h3\" component=\"h1\">\r\n          Поиск погоды\r\n        </Typography>\r\n      </Box>\r\n      <ErrorBoundary>\r\n        <SearchForm openModalHandler={() => setModalState(true)} />\r\n      </ErrorBoundary>\r\n      <Modal\r\n        className={classes.modal}\r\n        open={modalState}\r\n        onClose={() => setModalState(false)}\r\n        disableAutoFocus={true}\r\n        disableEnforceFocus={true}\r\n      >\r\n        <Box>\r\n          <ErrorBoundary>\r\n            <CityCard onCloseHandler={() => setModalState(false)} />\r\n          </ErrorBoundary>\r\n        </Box>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  rootContainer: {\r\n    marginTop: 40,\r\n    padding: \"0 20px\",\r\n  },\r\n  titleContainer: { padding: \"0 20px\" },\r\n  modal: {\r\n    display: \"grid\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    overflowY: \"auto\",\r\n  },\r\n});\r\n\r\nexport default App;\r\n","import apiKey from \"../constants/apiKey\";\r\n\r\nfunction resCheck(res) {\r\n  if (!res.ok) throw new Error(\"Ничего не найдено\");\r\n  return res.json();\r\n}\r\n\r\nexport default class WeaterService {\r\n  constructor() {\r\n    this.url = \"https://api.openweathermap.org/data/2.5/\";\r\n    this.apiKey = apiKey;\r\n    this.lang = \"ru\";\r\n  }\r\n  getCity = (id) => {\r\n    const adress = `${this.url}weather?q=${id}&appid=${this.apiKey}&lang=${this.lang}`;\r\n    return fetch(adress).then(resCheck);\r\n  };\r\n  getWeeklyWeather = (lat, lon) => {\r\n    // На неделю бесплатно данные можно получать только по координатам\r\n    const adress = `${this.url}onecall?lat=${lat}&lon=${lon}&exclude=current,minutely,hourly&appid=${this.apiKey}&lang=${this.lang}`;\r\n    return fetch(adress).then((res) => (!res.ok ? new Error(res.status) : res.json()));\r\n  };\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider as StoreProvider } from \"react-redux\";\n\nimport store from \"./store\";\nimport App from \"./components/App/App\";\nimport ServiceContext from \"./components/ServiceContext/ServiceContext\";\nimport WeatherService from \"./api/WeatherService\";\n\nconst weatherService = new WeatherService();\n\nReactDOM.render(\n  <StoreProvider store={store}>\n    <ServiceContext.Provider value={weatherService}>\n      <App />\n    </ServiceContext.Provider>\n  </StoreProvider>,\n  document.getElementById(\"root\")\n);\n","const apiKey = process.env.REACT_APP_API_KEY;\r\nexport default apiKey;\r\n"],"sourceRoot":""}